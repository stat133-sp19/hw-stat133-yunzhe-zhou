s=sqrt(s/99)
s
x=1:100
s=0
for(i in 1:100)
{
s=s+(x[i]-mean(x))^2
}
s=sqrt(s/99)
s
s=0
i=1
while(i<=100)
{
s=s+(x[i]-mean(x))^2
i=i+1
}
s=sqrt(s/99)
s
x=1:100
s=0
for(i in 1:100)
{
s=s+(x[i]-mean(x))^2
}
s=sqrt(s/99)
s
s=0
i=1
while(i<=100)
{
s=s+(x[i]-mean(x))^2
i=i+1
}
s=sqrt(s/99)
s
s=0
i=1
repeat
{
if(i>100)
{
break
}
s=s+(x[i]-mean(x))^2
i=i+1
}
s=sqrt(s/99)
s
x=1:50
s=1
for(i in 1:50)
{
s=s*x[i]
}
s=s^(1/50)
s
s=1
i=1
while(i <=50)
{
s=s*x[i]
i=i+1
}
s=s^(1/50)
s
s=1
repeat
{
if(i>50)
{
break
}
s=s*x[i]
i=i+1
}
s=s^(1/50)
s
x=1:50
s=1
for(i in 1:50)
{
s=s*x[i]
}
s=s^(1/50)
s
s=1
i=1
while(i <=50)
{
s=s*x[i]
i=i+1
}
s=s^(1/50)
s
s=1
i=1
repeat
{
if(i>50)
{
break
}
s=s*x[i]
i=i+1
}
s=s^(1/50)
s
num_letters <- length(LETTERS)
set.seed(123)
values <- sample.int(num_letters)
distances <- values %*% t(values)
diag(distances) <- 0
dimnames(distances) <- list(LETTERS, LETTERS)
num_letters <- length(LETTERS)
set.seed(123)
values <- sample.int(num_letters)
distances <- values %*% t(values)
diag(distances) <- 0
dimnames(distances) <- list(LETTERS, LETTERS)
distances
num_letters <- length(LETTERS)
set.seed(123)
values <- sample.int(num_letters)
distances <- values %*% t(values)
diag(distances) <- 0
dimnames(distances) <- list(LETTERS, LETTERS)
distances[1:5,1:5]
values
t(values)
values*t(values)
values%*%t(values)
c(1,2)
c(1,2)*t(c(1,2))
c(1,2)%*%t(c(1,2))
typeof(distances)
#' @title function get_dist()
#' @description get the total distance of a given vector
#' @param distances (numeric) ltrs (character)
#' @return dis (numeric)
get_dist=function(distances,ltrs)
{
dis=0
for(i in 1:(length(ltrs-1)))
{
dis=dis+distances[ltrs[i],ltrs[i+1]]
}
}
#' @title function get_dist()
#' @description get the total distance of a given vector
#' @param distances (numeric) ltrs (character)
#' @return dis (numeric)
get_dist=function(distances,ltrs)
{
dis=0
for(i in 1:(length(ltrs-1)))
{
dis=dis+distances[ltrs[i],ltrs[i+1]]
}
}
vex=("E","D","A")
#' @title function get_dist()
#' @description get the total distance of a given vector
#' @param distances (numeric) ltrs (character)
#' @return dis (numeric)
get_dist=function(distances,ltrs)
{
dis=0
for(i in 1:(length(ltrs-1)))
{
dis=dis+distances[ltrs[i],ltrs[i+1]]
}
}
vex=c("E","D","A")
get_dist(distances,vec)
#' @title function get_dist()
#' @description get the total distance of a given vector
#' @param distances (numeric) ltrs (character)
#' @return dis (numeric)
get_dist=function(distances,ltrs)
{
dis=0
for(i in 1:(length(ltrs-1)))
{
dis=dis+distances[ltrs[i],ltrs[i+1]]
}
return(dis)
}
vex=c("E","D","A")
get_dist(distances,vec)
distances["A","A"]
distances["A","B"]
#' @title function get_dist()
#' @description get the total distance of a given vector
#' @param distances (numeric) ltrs (character)
#' @return dis (numeric)
get_dist=function(distances,ltrs)
{
dis=0
for(i in 1:(length(ltrs)-1))
{
dis=dis+distances[ltrs[i],ltrs[i+1]]
}
return(dis)
}
vex=c("E","D","A")
get_dist(distances,vec)
distances["E","D"]
#' @title function get_dist()
#' @description get the total distance of a given vector
#' @param distances (numeric) ltrs (character)
#' @return dis (numeric)
get_dist=function(distances,ltrs)
{
dis=0
for(i in 1:(length(ltrs)-1))
{
dis=dis+distances[ltrs[i],ltrs[i+1]]
print(dis)
}
return(dis)
}
vex=c("E","D","A")
get_dist(distances,vec)
#' @title function get_dist()
#' @description get the total distance of a given vector
#' @param distances (numeric) ltrs (character)
#' @return dis (numeric)
get_dist=function(distances,ltrs)
{
dis=0
for(i in 1:(length(ltrs)-1))
{
dis=dis+distances[ltrs[i],ltrs[i+1]]
print(ltrs[i])
}
return(dis)
}
vex=c("E","D","A")
get_dist(distances,vec)
#' @title function get_dist()
#' @description get the total distance of a given vector
#' @param distances (numeric) ltrs (character)
#' @return dis (numeric)
get_dist=function(distances,ltrs)
{
dis=0
for(i in 1:(length(ltrs)-1))
{
print(ltrs[i])
dis=dis+distances[ltrs[i],ltrs[i+1]]
}
return(dis)
}
vex=c("E","D","A")
get_dist(distances,vec)
#' @title function get_dist()
#' @description get the total distance of a given vector
#' @param distances (numeric) ltrs (character)
#' @return dis (numeric)
get_dist=function(distances,ltrs)
{
dis=0
print(ltrs[1])
for(i in 1:(length(ltrs)-1))
{
dis=dis+distances[ltrs[i],ltrs[i+1]]
}
return(dis)
}
vex=c("E","D","A")
get_dist(distances,vec)
vec[i]
vec[1]
vec
#' @title function get_dist()
#' @description get the total distance of a given vector
#' @param distances (numeric) ltrs (character)
#' @return dis (numeric)
get_dist=function(distances,ltrs)
{
dis=0
for(i in 1:(length(ltrs)-1))
{
dis=dis+distances[ltrs[i],ltrs[i+1]]
}
return(dis)
}
vex=c("E","D","A")
get_dist(distances,vec)
vec
vec=c("dd","dd")
vec
vec=c("A","dd")
vec
vec=c("A")
vec
vec=c("A","E")
vec
#' @title function get_dist()
#' @description get the total distance of a given vector
#' @param distances (numeric) ltrs (character)
#' @return dis (numeric)
get_dist=function(distances,ltrs)
{
dis=0
for(i in 1:(length(ltrs)-1))
{
dis=dis+distances[ltrs[i],ltrs[i+1]]
}
return(dis)
}
vex=c("E","D","A")
get_dist(distances,vec)
vec
vec
#' @title function get_dist()
#' @description get the total distance of a given vector
#' @param distances (numeric) ltrs (character)
#' @return dis (numeric)
get_dist=function(distances,ltrs)
{
dis=0
for(i in 1:(length(ltrs)-1))
{
dis=dis+distances[ltrs[i],ltrs[i+1]]
}
return(dis)
}
vex=c("E","D","A")
get_dist(distances,vec)
vec
#' @title function get_dist()
#' @description get the total distance of a given vector
#' @param distances (numeric) ltrs (character)
#' @return dis (numeric)
get_dist=function(distances,ltrs)
{
dis=0
for(i in 1:(length(ltrs)-1))
{
dis=dis+distances[ltrs[i],ltrs[i+1]]
}
return(dis)
}
vec=c("E","D","A")
get_dist(distances,vec)
#' @title function get_dist()
#' @description get the total distance of a given vector
#' @param distances (numeric) ltrs (character)
#' @return dis (numeric)
get_dist=function(distances,ltrs)
{
dis=0
for(i in 1:(length(ltrs)-1))
{
dis=dis+distances[ltrs[i],ltrs[i+1]]
}
return(dis)
}
vec=c("E","D","A")
get_dist(distances,vec)
cal <- c('C', 'A', 'L')
stats <- c('S', 'T', 'A', 'T', 'S')
oski <- c('O', 'S', 'K', 'I')
zzz <- rep('Z', 3)
lets <- LETTERS
zyz_first=c("Y","U","N","Z","H","E")
zyz_last=c("Z","H","O","U")
#' @title function get_dist()
#' @description get the total distance of a given vector
#' @param distances (numeric) ltrs (character)
#' @return dis (numeric)
get_dist=function(distances,ltrs)
{
dis=0
for(i in 1:(length(ltrs)-1))
{
dis=dis+distances[ltrs[i],ltrs[i+1]]
}
return(dis)
}
vec=c("E","D","A")
get_dist(distances,vec)
cal <- c('C', 'A', 'L')
stats <- c('S', 'T', 'A', 'T', 'S')
oski <- c('O', 'S', 'K', 'I')
zzz <- rep('Z', 3)
lets <- LETTERS
zyz_first=c("Y","U","N","Z","H","E")
zyz_last=c("Z","H","O","U")
get_dist(distances,cal)
get_dist(distances,stats)
get_dist(distances,oski)
get_dist(distances,zzz)
get_dist(distances,lets)
get_dist(distances,zyz_first)
get_dist(distances,zyz_last)
strings <- list(
cal = cal,
stats = stats,
oski = oski,
zzz = zzz,
lets = lets,
first = first,
last = last
)
strings[1,]
strings <- list(
cal = cal,
stats = stats,
oski = oski,
zzz = zzz,
lets = lets,
first = first,
last = last
)
strings <- list(
cal = cal,
stats = stats,
oski = oski,
zzz = zzz,
lets = lets,
first = first,
last = last
)
#' @title function get_dist()
#' @description get the total distance of a given vector
#' @param distances (numeric) ltrs (character)
#' @return dis (numeric)
get_dist=function(distances,ltrs)
{
dis=0
for(i in 1:(length(ltrs)-1))
{
dis=dis+distances[ltrs[i],ltrs[i+1]]
}
return(dis)
}
vec=c("E","D","A")
get_dist(distances,vec)
cal <- c('C', 'A', 'L')
stats <- c('S', 'T', 'A', 'T', 'S')
oski <- c('O', 'S', 'K', 'I')
zzz <- rep('Z', 3)
lets <- LETTERS
first=c("Y","U","N","Z","H","E")
last=c("Z","H","O","U")
get_dist(distances,cal)
get_dist(distances,stats)
get_dist(distances,oski)
get_dist(distances,zzz)
get_dist(distances,lets)
get_dist(distances,first)
get_dist(distances,last)
strings <- list(
cal = cal,
stats = stats,
oski = oski,
zzz = zzz,
lets = lets,
first = first,
last = last
)
strings
strings[1]
strings[3]
strings <- list(
cal = cal,
stats = stats,
oski = oski,
zzz = zzz,
lets = lets,
first = first,
last = last
)
strings_dists <- list(
cal = NA,
stats = NA,
oski = NA,
zzz = NA,
lets = NA,
first = NA,
last = NA
)
for(i in 1: length(strings))
{
strings_dists[i]=get_dist(distances,strings[i])
}
strings <- list(
cal = cal,
stats = stats,
oski = oski,
zzz = zzz,
lets = lets,
first = first,
last = last
)
strings_dists <- list(
cal = NA,
stats = NA,
oski = NA,
zzz = NA,
lets = NA,
first = NA,
last = NA
)
for(i in 1: length(strings))
{
strings_dists[[i]]=get_dist(distances,strings[[i]])
}
strings_dists
